#!/usr/bin/perl -Ilib

use strict;
use warnings;
use Drelwa;
use Data::Dumper;
use File::Path qw(make_path);
use File::Util;
use Getopt::Long;
use Pod::Usage;
use POSIX qw(strftime);

########## config section ############
my $verbose;
my $help;
my $man;
my $rebuild;
my $index;
my $atom;
my $posts = 'posts/';
my $site = 'site/';

GetOptions(
    "atom|a"    => \$atom,
    "index|i"   => \$index,
    "rebuild|r" => \$rebuild,
    "verbose|v" => \$verbose,
    'help|?'    => \$help,
    "man"       => \$man,
) or pod2usage(2);
######################################

pod2usage(1) if $help;
pod2usage( -exitstatus => 0, -verbose => 2 ) if $man;


if($rebuild){
    my @files = _dir();
    foreach my $file (@files){
        print "Rebuilding $file ...\n" if $verbose;
        rebuild_file($posts.$file);
    }
}

if($index){
    print "Rebuilding index.html ...\n" if $verbose;
    my @_files = _dir();
    my @files = splice(@_files, -5);
    my @posts;
    foreach my $file (@files){
        push(@posts, Drelwa::in($posts.$file));
    }
    my $data;
    $data->{path} = '/';
    $data->{filename} = 'index.html';
    $data->{layout} = 'index';
    $data->{posts} = \@posts;
    _write_file($data);
}

if($atom){
    print "Rebuilding atom.xml ...\n" if $verbose;
    my @_files = _dir();
    my @files = splice(@_files, -5);
    my @posts;
    foreach my $file (@files){
        push(@posts, Drelwa::in($posts.$file));
    }
    my $data;
    $data->{time} = strftime "%Y-%m-%eT%H:%M:%S%z", localtime;
    $data->{path} = '/';
    $data->{filename} = 'atom.xml';
    $data->{layout} = 'atom';
    $data->{posts} = \@posts;
    _write_file($data, 'atom');
}

sub rebuild_file {
    my $file = shift;
    my $data = Drelwa::in($file);
    _write_file($data);
}

sub _write_file {
    my $data = shift;
    my $template = shift;
    my $post = Drelwa::out($data, $template);
    my $path = $site . $data->{path} . '/';

    make_path($path);
    open( POST, '>', $path . $data->{filename} ) or die "$@\n";
    print POST $post;
    close POST;
}

sub _dir {
    my $d = File::Util->new();
    my @_files = $d->list_dir( $posts , '--files-only' );
    my @files = sort(@_files);
    return @files;
}

__END__

=head1 NAME

drelwa - commandline parser for blog posts

=head1 SYNOPSIS

drelwa [options]

 Options:
   -rebuild|r       rebuild the blog pages
   -help|?          brief help message
   -verbose|v       be chatty
   -man             full documentation

=head1 OPTIONS

=over 8

=item B<-help>

Print a brief help message and exits.

=item B<-man>

Prints the manual page and exits.

=back

=head1 DESCRIPTION

B<This parser> converts blog posts written in markdown into HTML pages
that can be served by a web server.

=cut
